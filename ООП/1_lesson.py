class Point:
    '''Класс представления координат точек на плоскости'''
    color = 'red'
    circle = 2




# Переменные внутри класса называют 'АТРИБУТАМИ' или его 'СВОЙСТВАМИ'
# Сolor и Сircle
# Чтобы что-то изменить в пространстве имен (свойствах) класса
# мы обращаемся
                    # (имя ClassName.свойство = 'новое свойство' или цифра без кавычек)
# Чтобы прочитать свойство - обращаемся к классу
                    # (имя ClassName.свойство)
# Чтобы чтобы увидеть все атрибуты (свойства класса) обращаемся
                    # (имя ClassName.__dict__) появится коллекция напоминающая словарь
# Чтобы создать экземпляр класса нужно создать переменную, присвоить ей имя класса
# и поставсить пустые скобки после имени класса
                    # a = Point()
# Чтобы порверить на объекты какого класса ссылаются переменные нужно прописать
                    # type(a)
# Так же можно проверить прописав принадлежность экземпляка к классу
                    # type(a) == Point
                    # isinstance(a, Point) - имя класса выступает в качестве типа данных
# Объекты a и b образуют свое пространство имен экземпляров класса
# И не содержат никаких собственных атрибутов, они ссылаются на атрибуты (свойства) класса Point
# Атрибуты (свойства) класса общие для всех экземпляров класса
# Изначально переменная (a) ссылается на свойства класса и она пустая
                    # а.__dict будет - {}
# но если мы присвоим ей значение, то ссылаться она уже будет на свое значение, а не на
# значение (свойство класса)
                    # a.color = 'green' - теперь цвет не красный, а зеленый
                    # т.к. мы создали экземпляру класса свой собственный атрибут (свойство)
# По аналогии мы можем создавать новые атрибуты (свойства) и в классе Point
# выглядит это так и соответственно он сразу повляется и экземплярах
                    # ClassName.type_pt = 'disc'
# Либо мы можем сделать то же самое при помощи функции
# setattr(указываем класс_пространство имен, 'свойство - атрибут В КАВЫЧКАХ',и значение)
                    # setattr(ClassName, 'prop', 1)
# Либо поменять значение
                    # setattr(ClassName, атрибут в КАВЫЧКАХ, новое значение
# Если хотим прочитать атрибуты (значение) класса, то нужно обратиться
# к имени класса или имя экземпляра класса и указать атрибут к которому обращаемся

# Если атрибут не существует и мы хотим узнать, действительно ли, то прописываем
# конструкцию
                    # getattr(Point(обращение к классу), 'a', False)

# Чтобы удалить атрибуты из класса можно воспользоваться оператором 'del'
# указывая какой атрибут из  какого пространства имен удаляется - 2 способа
                    # del Point(ClassName).prop
                    # delattr(Point(ClassName, 'атрибут')
# Удалять несуществующий атрибут при помощи команды 'del' нельзя - получим ошибку
# Существует ли атрибут - можно проверить при помощи команды 'has'
                    # hasattr(Point, 'prop')
