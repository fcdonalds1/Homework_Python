#a, b = map(str, input().split())
#print('Переменная a =' + ' ' + a, 'переменная b =' + ' ' + b, sep=', ')

#Подвиг 9. Написать программу ввода строки и формирования новой строчки вида:
# "Строка: <введенная строка>. Длина: <длина строки>". Результат сформированной
# строки вывести на экран.

#Sample Input:

5

#a = str(input())
#b = str(len(a))
#print('Строка: ' + a, 'Длина: ' + b, sep='. ')

# Подвиг 10. Написать программу ввода двух слов (через пробел в одну строчку).
# Определить булевы значения для оператора in проверки вхождения первого слова во второе.
# А также для операторов ==, >, <.
# Все булевы значения объединить в одну строку через пробел и вывести на экран.
# hello python


#a, b = (input().split())
#print(a in b, a == b, a > b, a < b)

#a, b = input().split()
#print('Коды: ' + 'a = ' + str(ord(a)), 'z = ' + str(ord(b)), sep=', ')

#a = 'I love Python'
#print(a[0] + a[-1])

#Подвиг 7. Вводятся две строки (каждая с новой строчки).
# Из первой строки выделить все символы с четными индексами, а из второй - с нечетными.
# Объединить строки через пробел и вывести на экран.

#hello
#world


#Hlo yhn

#a = input()
#b = input()

#a_1 = a[0:5:2]
#b_1 = b[1:6:2]
#print(a_1, '' + b_1)


#a = 'abrakadabra'
#print(a[-7::-1])

#a, b = input().split()
#print(b[0:5])

#Hello Hell
#a, b = input().split()
#a_1 = a[0:4]
#print(a[1:5:2] == b[1:5:2])


#a = input()
#print(a.capitalize())

#a = input()
#print(a.count('-'))
#a = 'sd'
#b = a.find('o')
#print(b)

#a = input()
#b = a.find('ra')
#print(b)

#a = input()
#b = a.replace('---', '-').replace('--', '-')
#print(b)


#a, b, c = map(str, input().split())
#x = a.rjust(3, '0')
#y = b.rjust(3, '0')
#z = c.rjust(3, '0')
#print(x, y, z, sep='\n')

#a = input().split()
#print(len(a))

#a = input()
#b = a.replace(' ', '; ')
#print(b)

#a = 1, 3, 4
#b = list(a)
#print(b)

#marks = list(map(int, input().split()))
#b = sum(marks) / len(marks)
#print(round(b, 1))

#Мастер и Маргарита
#Булгаков
#233
#435.45

#a = input()
#b = input()
#c = int(input())
#d = float(input())
#f = [a, b, c, d]
#f.remove(233)
#f[1] = 'Пушкин'
#f[2] = 435.45 * 2
#print(f)


#52 65 64 54 68 59 42 63

#a = list(map(int, input().split()))
#print(max(a), min(a), sum(a))

#a = list(map(int, input().split()))
#lst = sorted(a, reverse=True)
#print(*lst)

#a = list(map(str, input().split()))
#cities = ['Москва', 'Тверь', 'Вологда']
#lst = cities + a
#print(*lst)

#a = list(map(str, input().split()))
#cities = ['Москва', 'Тверь', 'Вологда']
#lst = a + cities
#print(*lst)

#m = [2, 3, 5, 5, 2, 2, 3, 3, 4, 5, 4, 4]
#v = m[2:7]
#d = v[::-1]
#print(d)

#m = [2, 3, 5, 5, 2, 2, 3, 3, 4, 5, 4, 4]
#print(m[::-2])

#a = list(map(int, input().split()))
#v = a[0] != a[-1]
#lst = a + [v]
#print(*lst)

#cities = ["Москва", "Казань", "Ярославль"]
#cities.insert(1, 'Ульяновск')
#print(*cities)


#a = input()
#lst = list(a)
#lst.remove('+')
#lst[0] = '8'
#lst.remove('-')
#lst.remove('-')
#print(''.join(lst))

#Подвиг 5. В одну строчку через пробел вводятся: имя, отчество и фамилия.
# Необходимо представить эти данные в виде новой строки в формате: Фамилия И.О.
# (Например, Сергей Михайлович Балакирев -> Балакирев С.М.).

#Sample Input:

#Сергей Михайлович Балакирев
#Sample Output:

#Балакирев С.М.

#a, b, c = input().split()
#name = a[0] + '.'
#s_name = b[0] + '.'
#print(c + ' ' + name + s_name)

#a = list(map(int, input().split()))
#a.sort()
#b = a[0:3]
#print(*b)

# Вводятся целые числа в одну строчку через пробел.
# Необходимо преобразовать их в список lst , затем, удалить последнее значение и если оно нечетное,
# то в список (в конец) добавить True, иначе - False.
# Отобразить полученный список на экране командой:

#a = list(map(int, input().split()))
#v = a.pop()  % 2 != 0
#lst = a + [v]
#print(*lst)

#a = list(map(int,input().split()))
#print(a.count(int('2')))


#a = list(input().split())
#a.sort()
#a.pop(0)
#print(*a)


#a = [5.4, 6.7, 10.4]
#b = list(map(int, input().split()))
#lst = a + [b]
#print(lst)

#a = list(map(str, input().split()))
#b = list(map(str, input().split()))
#c = list(map(str, input().split()))
#d = [a] + [b] + [c]
#print(d)

#a = input().split()
#b = input().split()
#c = input().split()
#print(a[3] + ' ' + b[3] + ' ' + c[3])


#a = [True, [1, 0, ["True", ["Истина", "Ложь"], "False"]], False]
#print(a[1][2][1][0])

#print(a[1][2][1][0])

#a = [True, [1, 0, ["True", ["Истина", "Ложь"], "F"]], False]
#del a[1][2][2]
#print(a)

#t = [["Скажи-ка", "дядя", "ведь", "не", "даром"],
   # ["Я", "Python", "выучил", "с", "каналом"],
   # ["Балакирев", "что", "раздавал?"]]

#a = input()
#b = a in t[0] + t[1] + [2]
#print(b)

#b = t[0] + t[1] + t[2]
#c = 'дядя' in b
#print(c)

#a, b = map(float, input().split())
#if a > b:
#    print(a)
#else:
#    print(b)

#a = input()
#b = a.lower()
#if b == b[::-1]:
#    print('ДА')
#else:
#    print('НЕТ')

#Вводятся два целых положительных числа m и n в одну строку через пробел.
# Если число m делится нацело на число n, то вывести на экран частное от деления (результат деления) в виде целого числа.
# В противном случае вывести сообщение «m на n нацело не делится» (без кавычек)
# и вместо m и n подставить соответствующие числа, например: «13 на 2 нацело не делится».

#m, n = map(int, input().split())
#if m % n == 0:
#    print(int(m / n))
#else:
#    print(f'{m} на {n} нацело не делится')


#Подвиг 4. Вводятся три целых положительных числа в одну строку через пробел.
# Убедиться, что первые два числа - это катеты прямоугольного треугольника, а третье - его гипотенуза.
# (Подсказка: проверка делается по теореме Пифагора ).
# Если проверка проходит (истинна), то вывести на экран ДА, иначе - НЕТ.

#a, b, c = map(int, input().split())
#if (c * c) == (a * a) + (b * b):
#    print('ДА')
#else:
#    print('НЕТ')

#a = int(input())
#if a % 10 == 7:
#    print('ДА')
#else:
#    print('НЕТ')

# Вводится слово. Проверить, что в этом слове присутствуют все три буквы: t, h и o (в произвольном порядке).
# Реализовать программу с помощью одного условного оператора.
# Если проверка проходит, вывести ДА, иначе - НЕТ.

#a = input()
#if 't' in a and 'h' in a and 'o' in a:
#    print('ДА')
#else:
#    print('НЕТ')


# Вводится список городов в одну строку через пробел.
# Если в этом списке присутствует город Москва, то удалить его.
# Вывести на экран результирующий список в виде строки с городами через пробел.


#a = input().split()
#if 'Москва' in a:
#    a.remove('Москва')
#print(*a)

# Вводятся четыре целых числа a, b, c, d в одну строку через пробел.
# Определить, войдет ли в конверт с внутренними размерами a и b мм прямоугольная открытка с размерами с и d мм.
# Для размещения открытки в конверте необходим зазор в 1 мм с каждой стороны. Открытку можно поворачивать на 90 градусов.
# Вывести ДА, если входит и НЕТ - если не входит. 12 5 7 2



#a, b, c, d = map(int, input().split())
#if a - 2 >= c  and b - 2 >= d or a - 2 >= d and b - 2 >= c:
    #print('ДА')
#elif a - 2 < d or b - 2 < c:
    #print('НЕТ')

#Подвиг 9. Вводится шестизначное число.
# Определить, является ли оно счастливым.
# (Счастливым называют такое шестизначное число,
# в котором сумма его первых трех цифр равна сумме его последних трех цифр.).
# Вывести ДА, если счастливое и НЕТ - в противном случае.

#a = list(map(int, input()))
#if a[0] + a[1] + a[2] == a[3] + a[4] + a[5]:
#    print('ДА')
#else:
#    print('НЕТ')

#Подвиг 10. Работа светофора для пешеходов запрограммирована следующим
#образом: в начале каждого часа в течение трех минут горит зеленый сигнал, затем в
#течение двух минут – красный, в течение трех минут – опять зеленый и т. д. Дано вещественное число t,
#означающее время в минутах, прошедшее с начала очередного часа. Определить, сигнал какого цвета горит для
#пешеходов в этот момент. На экран вывести
#сообщение (без кавычек) "green" - для зеленого и "red" - для красного

#a = float(input())

#if 0 <= a <= 4:
#    print('green')
#elif 4 <= a <= 6:
#    print('red')
#elif 5 <= a <= 8:
#    print('green')
#elif 8 <= a <= 10:
#    print('red')
#elif 10 <= a <= 14:
#    print('green')
#elif 13 <= a <= 16:
#    print('red')
#elif 15 <= a <= 18:
#    print('green')
#elif 18 <= a <= 20:
#    print('red')
#elif 20 <= a <= 24:
#    print('green')
#elif 23 <= a <= 26:
#    print('red')
#elif 25 <= a <= 28:
#    print('green')
#elif 28 <= a <= 30:
#    print('red')
#elif 30 <= a <= 34:
#    print('green')
#elif 33 <= a <= 36:
#    print('red')
#elif 35 <= a <= 38:
#    print('green')
#elif 38 <= a <= 40:
#    print('red')
#elif 40 <= a <= 44:
#    print('green')
#elif 43 <= a <= 46:
#    print('red')
#elif 45 <= a <= 48:
#    print('green')
#elif 48 <= a <= 50:
#    print('red')
#elif 50 <= a <= 54:
#    print('green')
#elif 53 <= a <= 56:
#    print('red')
#elif 55 <= a <= 58:
#    print('green')
#elif 58 <= a <= 60:
#    print('red')

m = '''1. Введение в Python
2. Строки и списки
3. Условные операторы
4. Циклы
5. Словари, кортежи и множества
6. Выход'''

#m = int(input())
#if m == 1:
#    print('1. Введение в Python')
#elif m == 2:
#    print('2. Строки и списки')
#elif m == 3:
#    print('3. Условные операторы')
#elif m == 4:
#    print('4. Циклы')
#elif m == 5:
#    print('5. Словари, кортежи и множества')
#elif m == 6:
#    print('6. Выход')

#a, b, c = list(map(int, input().split()))
#if a < b:
#    if a < c:
#        print(a)
#    else:
#        print(c)
#else:
#    if b < c:
#        print(b)
#    else:
#        print(c)

#Подвиг 3. Вводится вес боксера-любителя (в кг, в виде вещественного числа).
# Известно, что вес таков,
# что боксер может быть отнесен к одной из весовых категорий:

#1) легкий вес – до 60 кг (включительно);
#2) первый полусредний вес – до 64 кг (включительно);
#3) полусредний вес – до 69 кг (включительно);
#4) остальные - более 69 кг.
#Вывести на экран номер категории, в которой будет выступать боксер.

#a = float(input())
#if 0 <= a <= 60:
#    print('1')
#elif 60 < a <= 64:
#    print('2')
#elif 64 < a <= 69:
#    print('3')
#else:
#    print('4')


#a = int(input())

#if a == 1:
#    print('понедельник')
#elif a == 2:
#    print('вторник')
#elif a == 2:
#    print('среда')
#elif a == 2:
#    print('четверг')
#elif a == 2:
#    print('пятница')
#elif a == 2:
#    print('суббота')
#elif a == 2:
#    print('воскресенье')

#a = int(input())
#if a in [1, 3, 5, 7, 8, 10, 12]:
#    print('31')
#elif a in [4, 6, 9, 11]:
#    print('30')
#elif a in [2]:
#    print('28')

#Подвиг 6. Дата некоторого дня характеризуется двумя натуральными числами: m (порядковый номер месяца) и n (число).
# По введенным m и n (в одну строку через пробел) определить:
#а) дату предыдущего дня (принять, что m и n не характеризуют 1 января);
#б) дату следующего дня (принять, что m и n не характеризуют 31 декабря).
#В задаче принять, что год не является високосным.
# Вывести предыдущую дату и следующую дату (в формате: mm.dd, где m - число месяца; d - номер дня)
# в одну строчку через пробел.

#P.S. Число дней в месяцах не високосного года, начиная с января: 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31
#8 31
#Sample Output:
#08.30 09.01
#Напишите программу
# b - месяц
# a - число






#исключения


#month, day = map(int, input().split())
#in_year = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]

#if month == 12 and day == 31:
#    print('31.12')
#if month == 1 and day == 1:
#    print('01.01')

#if day == in_year[month]:
#    print(f"{month}.{in_year[month]-1} {month+1}.{1}")
#elif day == 1:
#    print(f"{month-1}.{in_year[month]-1} {month}.{day+1}")
#elif day != in_year[month] and day != 1:
#    print(f"{month}.{day - 1} {month}.{day+1}")












#k = int(input())
#a = k % 7
#if a == 1:
#    print('понедельник')
#if a == 2:
#    print('вторник')
#if a == 3:
#    print('среда')
#if a == 4:
#    print('четверг')
#if a == 5:
#    print('пятница')
#if a == 6:
#    print('суббота')
#if a == 7:
#    print('воскресенье')

#Подвиг 1. Вводится два вещественных числа, каждое с новой строки.
# Необходимо с помощью тернарного условного оператора наибольшее
# значение присвоить переменной d и вывести ее на экран

#a = float(input())
#b = float(input())

#d = a if a > b else b
#print(d)

#a = int(input())

#msg = 'кратно 3' if a % 3 == 0 else 'не кратно 3'
#print(msg)


#a = int(input())
#product_of_numbers = 1
#while a > 0:
#    last_number = a % 10
#    product_of_numbers = product_of_numbers * last_number
#    a = a // 10
#print(product_of_numbers)

#a = input()
#while '-' in a:
#    a = a.replace('--', '-')
#print(a)

#Последовательность Фибоначчи образуется так: первые два числа равны 1 и 1, а каждое последующее равно сумме двух предыдущих.
# Имеем такую последовательность чисел: 1, 1, 2, 3, 5, 8, 13, ...
# Постройте последовательность Фибоначчи длиной n (n вводится с клавиатуры). Результат отобразите в виде строки полученных чисел,
# записанных через пробел.
# Программу реализовать при помощи цикла while.



#n = int(input())
#fib_1, fib_2 = 1, 1
#print(fib_1, fib_2, end=' ')

#i = 2

#while i < n:
#    fib_1, fib_2 = fib_2, fib_1 + fib_2
#    print(fib_2, end=' ')
#    i += 1

n = int(input())
count = 1
a, b = 1, 1

while count <= n:
    print(a)
    a, b = b, a + b
    count += 1
