#Вводится слово.
# Переменной msg присвоить строку "палиндром", если введенное слово является
# палиндромом (одинаково читается и вперед и назад), а иначе присвоить строку "не палиндром".
# Проверку проводить без учета регистра.
# Программу реализовать с помощью тернарного условного оператора.
# Значение переменной msg отобразить на экране.

#a = input()
#b = a.lower()
#msg = 'палиндром' if b == b[::-1] else 'не палиндром'
#print(msg)

#Подвиг 4. Вводится целое число 0 или 1. Необходимо преобразовать их в строки: 0 - в "False", 1 - в "True".
# Реализовать это с помощью тернарного условного оператора. Результат отобразить на экране.

#a = int(input())
#b = 'True' if a != 0 else 'False'
#print(b)

#Вводится текущее время (секунды) в диапазоне [0; 59]. Если значение равно 59, то следующее должно быть 0.
# И так по кругу.
# Необходимо  вычислить следующее значение с проверкой граничного значения 59.
# Реализуйте это с помощью тернарного условного оператора. Результат отобразите на экране.
#P.S. Попробуйте также реализовать эту же задачу с использованием только арифметических операций.




#a = int(input())
#a = '0' if a >= 59 else a + 1
#print(a)

#m = ['до', 'ре', 'ми', 'фа', 'соль', 'ля', 'си']

#Вводятся три целых числа в диапазоне от 1 до 7 - номера нот, в одну строчку через пробел.
# Необходимо отобразить указанные ноты в виде строки через пробел, но перед нотами до и фа дополнительно ставить символ диеза '#'.
# Реализовать эту программу с использованием тернарного условного оператора (он может использоваться несколько раз).



#a, b, c = list(map(int, input().split()))
#m = ['0', 'до', 'ре', 'ми', 'фа', 'соль', 'ля', 'си']
#a = m[a] if a != 1 and a != 4 else ('#' + m[a])
#b = m[b] if b != 1 and b != 4 else ('#' + m[b])
#c = m[c] if c != 1 and c != 4 else ('#' + m[c])
#print(a, b, c)

#. Вводятся два целых положительных числа n и m, причем, n < m.
# Вывести в строку через пробел квадраты целых чисел в диапазоне [n; m].
# Программу реализовать при помощи цикла while.

#n, m = map(int, input().split())
#while n <= m:
#    z = n**2
#    n += 1
#    print(z, end=' ')


#a = float(input())
#q = 2
#while q <= 10:
#    z = (round(a * q, 2))
#    print(z, end=' ')
#    q += 1

#Вводится целое положительное число n.
# Вычислить и вывести на экран сумму: 1 + 1/2 + 1/3 + ... + 1/n с точностью до тысячных (три знака после запятой).
# Программу реализовать при помощи цикла while.

#n = int(input())
#summa = 0
#i = 1
#while i <= n:
#    summa += 1/i
#    i += 1
#print(round(summa, 3))

#Подвиг 5. На каждой итерации цикла пользователь вводит целое число.
# Цикл продолжается, пока не встретится число 0.
# Необходимо вычислить сумму введенных в цикле чисел и вывести результат на экран.
# Программу реализовать при помощи цикла while.
#8
#11
#2
#-4
#0


#a = int(input())
#summa = 0
#while a != 0:
#    summa = summa + a
#    a = int(input())
#print(summa)


#Подвиг 6. Вводится строка (слаг).
# Замените в этой строке все подряд идущие дефисы (--, ---, ---- и т.д.) на одинарные (-).
# Результат преобразования строки выведите на экран. Программу реализовать при помощи цикла while
#osnovnye--metody-----slovarey

a = input()
while '-' in a:
    a.replace('-', '')
    print(a)



#fib_1 = 1
#fib_2 = 1
#n = int(input())
#i = 0
#while i < n - 2:
#    fib_sum = fib_1 + fib_2
#    i += 1
#    fib_1 = fib_2
#    fib_2 = fib_sum
#    print(fib_sum, end=' ')

#Подвиг 9. Одноклеточная амеба каждые 3 часа делится на 2 клетки.
# Определить, сколько клеток будет через n часов (n - целое положительное число, вводимое с клавиатуры).
# Считать, что изначально была одна амеба. Результат вывести на экран.
# Задачу необходимо решить с использованием цикла while.

#n = int(input())
#summa_hours = 3
#count_ameba = 1
#while summa_hours < n:
#    summa_hours += 3
#    count_ameba *= 2
#print(count_ameba)

#Подвиг 10. Гражданин 1 января открыл счет в банке, вложив 1000 руб.
# Каждый год размер вклада увеличивается на 5% от имеющейся суммы.
# Определить сумму вклада через n лет (n - целое положительное число, вводимое с клавиатуры).
# Результат округлить до сотых и вывести на экран. Программу реализовать при помощи цикла while.

#a = int(input())
#money = 1000
#year = 1
#while a >= year:
#    money *= 1.05
#    year += 1
#print(round(money, 2))

#Подвиг 11. Вводятся два натуральных четных числа n и m в одну строчку через пробел, причем n < m.
# Напечатать все нечетные числа из интервала [n, m].
# Задачу решить без применения условного оператора.
# Результат вывести на экран в виде строки чисел, записанных через пробел.
# Программу реализовать при помощи цикла while

#Подвиг 12. Составить программу поиска всех трехзначных чисел, которые при делении на 47 дают в остатке 43 и кратны 3.
# Вывести найденные числа в строчку через пробел. Программу реализовать при помощи цикла while.


#231 372 513 654 795 936

#a = 100

#while a <= 999:
#    if a % 47 == 43 and a % 3 == 0:
#        print(a, end=' ')
#    a += 1



















